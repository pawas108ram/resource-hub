import { ResourceTag } from "@prisma/client";

export const resourceTypeOptions: { value: ResourceTag; label: string }[] = [
    { value: ResourceTag.DataStructure, label: 'Data Structure' },
    { value: ResourceTag.WebDevelopment, label: 'Web Development' },
    { value: ResourceTag.MachineLearning, label: 'Machine Learning' },
    { value: ResourceTag.DeepLearning, label: 'Deep Learning' },
    { value: ResourceTag.ArtificialIntelligence, label: 'Artificial Intelligence' },
    { value: ResourceTag.CompetitiveProgramming, label: 'Competitive Programming' },
    { value: ResourceTag.SystemDesign, label: 'System Design' },
    { value: ResourceTag.OperatingSystem, label: 'Operating System' },
    { value: ResourceTag.Database, label: 'Database' },
    { value: ResourceTag.Networking, label: 'Networking' },
    { value: ResourceTag.Array, label: 'Array' },
    { value: ResourceTag.String, label: 'String' },
    { value: ResourceTag.Searching, label: 'Searching' },
    { value: ResourceTag.Sorting, label: 'Sorting' },
    { value: ResourceTag.Graph, label: 'Graph' },
    { value: ResourceTag.Tree, label: 'Tree' },
    { value: ResourceTag.DynamicProgramming, label: 'Dynamic Programming' },
    { value: ResourceTag.Greedy, label: 'Greedy' },
    { value: ResourceTag.Backtracking, label: 'Backtracking' },
    { value: ResourceTag.BitManipulation, label: 'Bit Manipulation' },
    { value: ResourceTag.Math, label: 'Math' },
    { value: ResourceTag.Geometry, label: 'Geometry' },
    { value: ResourceTag.GameTheory, label: 'Game Theory' },
    { value: ResourceTag.Hashing, label: 'Hashing' },
    { value: ResourceTag.Stack, label: 'Stack' },
    { value: ResourceTag.Queue, label: 'Queue' },
    { value: ResourceTag.Heap, label: 'Heap' },
    { value: ResourceTag.LinkedList, label: 'Linked List' },
    { value: ResourceTag.BinarySearchTree, label: 'Binary Search Tree' },
    { value: ResourceTag.BinaryIndexedTree, label: 'Binary Indexed Tree' },
    { value: ResourceTag.SegmentTree, label: 'Segment Tree' },
    { value: ResourceTag.Trie, label: 'Trie' },
    { value: ResourceTag.DisjointSet, label: 'Disjoint Set' },
    { value: ResourceTag.FenwickTree, label: 'Fenwick Tree' },
    { value: ResourceTag.GraphTheory, label: 'Graph Theory' },
    { value: ResourceTag.ShortestPath, label: 'Shortest Path' },
    { value: ResourceTag.MinimumSpanningTree, label: 'Minimum Spanning Tree' },
    { value: ResourceTag.TopologicalSort, label: 'Topological Sort' },
    { value: ResourceTag.EulerianPath, label: 'Eulerian Path' },
    { value: ResourceTag.BipartiteGraph, label: 'Bipartite Graph' },
    { value: ResourceTag.FlowNetwork, label: 'Flow Network' },
    { value: ResourceTag.NetworkFlow, label: 'Network Flow' },
    { value: ResourceTag.MaximumFlow, label: 'Maximum Flow' },
    { value: ResourceTag.MinCut, label: 'Min Cut' },
    { value: ResourceTag.MaxCut, label: 'Max Cut' },
    { value: ResourceTag.Matching, label: 'Matching' },
    { value: ResourceTag.HopcroftKarp, label: 'Hopcroft Karp' },
    { value: ResourceTag.Dinic, label: 'Dinic' },
    { value: ResourceTag.EdmondsKarp, label: 'Edmonds Karp' },
    { value: ResourceTag.FordFulkerson, label: 'Ford Fulkerson' },
    { value: ResourceTag.BellmanFord, label: 'Bellman Ford' },
    { value: ResourceTag.FloydWarshall, label: 'Floyd Warshall' },
    { value: ResourceTag.Dijkstra, label: 'Dijkstra' },
    { value: ResourceTag.Johnson, label: 'Johnson' },
    { value: ResourceTag.Prim, label: 'Prim' },
    { value: ResourceTag.Kruskal, label: 'Kruskal' },
    { value: ResourceTag.Tarjan, label: 'Tarjan' },
    { value: ResourceTag.Kosaraju, label: 'Kosaraju' },
    { value: ResourceTag.SuffixArray, label: 'Suffix Array' },
    { value: ResourceTag.SuffixTree, label: 'Suffix Tree' },
    { value: ResourceTag.LCPArray, label: 'LCP Array' },
    { value: ResourceTag.ZAlgorithm, label: 'Z Algorithm' },
    { value: ResourceTag.KMPAlgorithm, label: 'KMP Algorithm' },
    { value: ResourceTag.RabinKarp, label: 'Rabin Karp' },
    { value: ResourceTag.Other, label: 'Other' },
  ];
  